void ReverseOrderTraversal(vector<int>& res,queue<Node*>& q)
{
    if(q.empty())
    return;
    vector<int> v;
    int len=q.size();
    for(int i=1;i<=len;i++)
    {
        Node* first=q.front();
        v.push_back(first->data);
        q.pop();
        if(first->left)
        q.push(first->left);
        if(first->right)
        q.push(first->right);
    }
    ReverseOrderTraversal(res,q);
    if(v.size()>0)
    {
        for(int i=0;i<v.size();i++)
        res.push_back(v[i]);
    }
}
vector<int> reverseLevelOrder(Node *root)
{
    vector<int> res;
    queue<Node*> q;
    q.push(root);
    ReverseOrderTraversal(res,q);
    return res;
    // code here
}
